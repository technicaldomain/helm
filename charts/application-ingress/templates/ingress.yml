{{- $fullName := include "common.fullname" . }}
{{- $appLabels := include "common.labels.standard" . -}}
{{- range .Values.services }}
{{- $contextPath := .contextPath }}
{{- $serviceName := .name }}
{{- $servicePort := .port | default 80 }}
{{- $annotations := .annotations }}
{{- $useRewrite := .useRewrite }}
{{- $ingressClass := .ingressClass | default $.Values.ingressClass | default "traefik" }}
{{- /* Define default annotations */}}
{{- $defaultAnnotations := dict }}
{{- if eq $ingressClass "nginx" }}
{{- $_ := set $defaultAnnotations "kubernetes.io/ingress.class" "nginx" }}
{{- $_ := set $defaultAnnotations "nginx.ingress.kubernetes.io/service-upstream" "true" }}
{{- $_ := set $defaultAnnotations "nginx.ingress.kubernetes.io/upstream-vhost" (printf "%s.%s.svc.cluster.local" $serviceName $.Release.Namespace) }}
{{- $_ := set $defaultAnnotations "nginx.ingress.kubernetes.io/use-regex" "true" }}
{{- if (default $useRewrite false) }}
{{- $_ := set $defaultAnnotations "nginx.ingress.kubernetes.io/rewrite-target" "/$2" }}
{{- end }}
{{- else if eq $ingressClass "traefik" }}
{{- $_ := set $defaultAnnotations "kubernetes.io/ingress.class" "traefik" }}
{{- if $.Values.explicitTLS }}
{{- $_ := set $defaultAnnotations "traefik.ingress.kubernetes.io/router.tls" "true" }}
{{- $_ := set $defaultAnnotations "traefik.ingress.kubernetes.io/router.entrypoints" "websecure" }}
{{- else }}
{{- $_ := set $defaultAnnotations "traefik.ingress.kubernetes.io/router.entrypoints" "web" }}
{{- end }}
{{- if (default $useRewrite false) }}
{{- $_ := set $defaultAnnotations "traefik.ingress.kubernetes.io/router.middlewares" (printf "%s-rewrite" $serviceName) }}
{{- end }}
{{- end }}

{{- /* Merge annotations from values file, overriding defaults */}}
{{- $mergedAnnotations := mergeOverwrite $defaultAnnotations $annotations }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName}}-{{ $serviceName }}
  labels: {{ $appLabels | nindent 4 }}
  annotations:
    {{- range $key, $value := $mergedAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  tls:
    - hosts:
      {{- range $.Values.hosts }}
        - {{ . | quote }}
      {{- end }}
      {{- if $.Values.explicitTLS }}
      secretName: {{ $.Values.explicitTLS }}
      {{- end }}
  rules:
  {{- range $.Values.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
        {{- range $contextPath }}
          - path: {{ . }}
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
        {{- end }}
  {{- end }}
{{- end }}
